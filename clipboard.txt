 public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("JavaFX Clipboard Example");

        // Create UI components
        TextField textField = new TextField();
        textField.setPromptText("Enter text to copy");

        Button copyButton = new Button("Copy to Clipboard");
        Button pasteButton = new Button("Paste from Clipboard");

        TextArea resultArea = new TextArea();
        resultArea.setEditable(false);
        resultArea.setPromptText("Pasted text will appear here");

        // Copy action
        copyButton.setOnAction(e -> {
            String text = textField.getText();
            if (!text.isEmpty()) {
                Clipboard clipboard = Clipboard.getSystemClipboard();
                ClipboardContent content = new ClipboardContent();
                content.putString(text);//can be replaced by file,url,image etc.
                clipboard.setContent(content);
                resultArea.setText("Copied to clipboard: " + text);
            } else {
                resultArea.setText("Please enter some text first");
            }
        });

        // Paste action
        pasteButton.setOnAction(e -> {
            Clipboard clipboard = Clipboard.getSystemClipboard();
            if (clipboard.hasString()) {
                String text = clipboard.getString();
                resultArea.setText("Pasted from clipboard:\n" + text);
            } else {
                resultArea.setText("Clipboard doesn't contain text");
            }
        });

        // Layout
        VBox root = new VBox(10);
        root.getChildren().addAll(
                textField,
                copyButton,
                pasteButton,
                resultArea
        );
        root.setPadding(new javafx.geometry.Insets(10));

        primaryStage.setScene(new Scene(root, 400, 300));
        primaryStage.show();
    }

canvas:

private void show_canvas(){
        VBox cs_root = new VBox();
        Canvas canvas = new Canvas(500,500);
        GraphicsContext gc = canvas.getGraphicsContext2D();
        // Define arc parameters
        int x = 500 / 2 - 10;
        int y = 500 / 2 - 10;
        int width = 20;
        int height = 20;
        int startAngle = 0;
        int arcAngle = 180;
        int depth = 10;
        for (int i = 0; i < 10; i++) {
            if (i % 2 == 0) {
                //   g.drawArc(x + 10, y + 10, width, height, startAngle + 10, -arcAngle);
                //  x = x - 5;

                y = y - depth;
                width = width + 2 * depth;
                height = height + 2 * depth;
                gc.strokeArc(x, y, width, height, startAngle, -arcAngle,ArcType.OPEN);
            } else {
                //  g.drawArc(x + 10, y + 10, width, height, startAngle + 10, arcAngle);
                x = x - 2 * depth;
                y = y - depth;
                width = width + 2 * depth;
                height = height + 2 * depth;
                gc.strokeArc(x, y, width, height, startAngle, arcAngle,ArcType.OPEN);
            }
        }

        cs_root.getChildren().addAll(canvas);
        Scene cs = new Scene(cs_root);
        Stage cs_stage = new Stage();
        cs_stage.setScene(cs);
        cs_stage.show();
    }
